State 0:
          program ::= * TKN_PROGRAM program_id TKN_SEMI_COLON vars functions TKN_MAIN body program_end

                   TKN_PROGRAM shift        43     
                       program accept

State 1:
          print_prm ::= * TKN_STRING_CONST print_prm_prm
          print_prm ::= * expression print_prm_prm
          print_prm_prm ::= TKN_COMMA * print_prm
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
              TKN_STRING_CONST shift        33     
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                    expression shift        32     
                     print_prm shift-reduce 49     print_prm_prm ::= TKN_COMMA print_prm
                           exp shift        20     
                       termino shift        24     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */

State 2:
          print ::= TKN_PRINT TKN_LPAREN * print_prm TKN_RPAREN TKN_SEMI_COLON
          print_prm ::= * TKN_STRING_CONST print_prm_prm
          print_prm ::= * expression print_prm_prm
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
              TKN_STRING_CONST shift        33     
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                    expression shift        32     
                     print_prm shift        55     
                           exp shift        20     
                       termino shift        24     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */

State 3:
          cycle_expression ::= * expression
          cycle ::= cycle_condition_start * cycle_expression TKN_RPAREN body cycle_end
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                    expression shift-reduce 13     cycle_expression ::= expression
              cycle_expression shift        57     
                           exp shift        20     
                       termino shift        24     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */

State 4:
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
     (59) call ::= *
          call ::= * expression call_prm
          call_prm ::= TKN_COMMA * call
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                    expression shift        39     
                          call shift-reduce 61     call_prm ::= TKN_COMMA call
                           exp shift        20     
                       termino shift        24     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */
                     {default} reduce       59     call ::=

State 5:
          f_call ::= TKN_ID TKN_LPAREN * call TKN_RPAREN TKN_SEMI_COLON
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
     (59) call ::= *
          call ::= * expression call_prm
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                    expression shift        39     
                          call shift        64     
                           exp shift        20     
                       termino shift        24     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */
                     {default} reduce       59     call ::=

State 6:
          condition ::= TKN_IF TKN_LPAREN * expression condition_start body cond TKN_SEMI_COLON
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                    expression shift        38     
                           exp shift        20     
                       termino shift        24     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */

State 7:
          assign ::= assign_start * expression TKN_SEMI_COLON
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                    expression shift        61     
                           exp shift        20     
                       termino shift        24     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */

State 8:
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= TKN_LPAREN * expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                    expression shift        62     
                           exp shift        20     
                       termino shift        24     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */

State 9:
          statements ::= * statement statements
          statements ::= statement * statements
     (36) statements ::= *
          statement ::= * assign
          statement ::= * condition
          statement ::= * cycle
          statement ::= * f_call
          statement ::= * print
          assign_start ::= * TKN_ID TKN_ASSIGN
          assign ::= * assign_start expression TKN_SEMI_COLON
          condition ::= * TKN_IF TKN_LPAREN expression condition_start body cond TKN_SEMI_COLON
          cycle_condition_start ::= * TKN_WHILE TKN_LPAREN
          cycle ::= * cycle_condition_start cycle_expression TKN_RPAREN body cycle_end
          f_call ::= * TKN_ID TKN_LPAREN call TKN_RPAREN TKN_SEMI_COLON
          print ::= * TKN_PRINT TKN_LPAREN print_prm TKN_RPAREN TKN_SEMI_COLON

                        TKN_ID shift        44     
                        TKN_IF shift        60     
                     TKN_WHILE shift        58     
                     TKN_PRINT shift        56     
                    statements shift-reduce 35     statements ::= statement statements
                     statement shift        9      
                        assign shift        9        /* because assign==statement */
                     condition shift        9        /* because condition==statement */
                         cycle shift        9        /* because cycle==statement */
                        f_call shift        9        /* because f_call==statement */
                         print shift        9        /* because print==statement */
                  assign_start shift        7      
         cycle_condition_start shift        3      
                     {default} reduce       36     statements ::=

State 10:
          body ::= TKN_LBRACE * statements TKN_RBRACE
          statements ::= * statement statements
     (36) statements ::= *
          statement ::= * assign
          statement ::= * condition
          statement ::= * cycle
          statement ::= * f_call
          statement ::= * print
          assign_start ::= * TKN_ID TKN_ASSIGN
          assign ::= * assign_start expression TKN_SEMI_COLON
          condition ::= * TKN_IF TKN_LPAREN expression condition_start body cond TKN_SEMI_COLON
          cycle_condition_start ::= * TKN_WHILE TKN_LPAREN
          cycle ::= * cycle_condition_start cycle_expression TKN_RPAREN body cycle_end
          f_call ::= * TKN_ID TKN_LPAREN call TKN_RPAREN TKN_SEMI_COLON
          print ::= * TKN_PRINT TKN_LPAREN print_prm TKN_RPAREN TKN_SEMI_COLON

                        TKN_ID shift        44     
                        TKN_IF shift        60     
                     TKN_WHILE shift        58     
                     TKN_PRINT shift        56     
                    statements shift        65     
                     statement shift        9      
                        assign shift        9        /* because assign==statement */
                     condition shift        9        /* because condition==statement */
                         cycle shift        9        /* because cycle==statement */
                        f_call shift        9        /* because f_call==statement */
                         print shift        9        /* because print==statement */
                  assign_start shift        7      
         cycle_condition_start shift        3      
                     {default} reduce       36     statements ::=

State 11:
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          exp ::= exp_begin * exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                           exp shift-reduce 52     exp ::= exp_begin exp
                       termino shift        24     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */

State 12:
          expression ::= exp comp * exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                           exp shift-reduce 19     expression ::= exp comp exp
                       termino shift        24     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */

State 13:
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          termino ::= termino_begin * termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        8      
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                       termino shift-reduce 53     termino ::= termino_begin termino
                          sign shift        14     
                        factor shift        23     
                 termino_begin shift        13     
                    factor_prm shift        23       /* because factor_prm==factor */
                           cte shift        23       /* because cte==factor_prm */

State 14:
          factor ::= sign * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte
          cte ::= * TKN_INT_CONST
          cte ::= * TKN_FLOAT_CONST

                        TKN_ID shift-reduce 57     factor_prm ::= TKN_ID
                 TKN_INT_CONST shift-reduce 63     cte ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 64     cte ::= TKN_FLOAT_CONST
                    factor_prm shift-reduce 55     factor ::= sign factor_prm
                           cte shift-reduce 55     factor ::= sign factor_prm  /* because cte==factor_prm */

State 15:
          vars_prm ::= * vars_prm_prm TKN_COLON type TKN_SEMI_COLON
      (2) vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON *
          vars_prm ::= * vars_prm_prm TKN_COLON type TKN_SEMI_COLON vars_prm
          vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON * vars_prm
          vars_prm_prm ::= * TKN_ID
          vars_prm_prm ::= * TKN_ID TKN_COMMA vars_prm_prm

                        TKN_ID shift        48     
                  vars_prm_prm shift        50     
                      vars_prm shift-reduce 3      vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON vars_prm
                     {default} reduce       2      vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON

State 16:
          vars ::= TKN_VAR * vars_prm
          vars_prm ::= * vars_prm_prm TKN_COLON type TKN_SEMI_COLON
          vars_prm ::= * vars_prm_prm TKN_COLON type TKN_SEMI_COLON vars_prm
          vars_prm_prm ::= * TKN_ID
          vars_prm_prm ::= * TKN_ID TKN_COMMA vars_prm_prm

                        TKN_ID shift        48     
                  vars_prm_prm shift        50     
                      vars_prm shift-reduce 27     vars ::= TKN_VAR vars_prm

State 17:
          functions ::= * function functions
          functions ::= function * functions
     (32) functions ::= *
          function ::= * TKN_VOID function_id TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end

                      TKN_VOID shift        31     
                     functions shift-reduce 31     functions ::= function functions
                      function shift        17     
                     {default} reduce       32     functions ::=

State 18:
          condition ::= TKN_IF TKN_LPAREN expression condition_start body * cond TKN_SEMI_COLON
     (15) cond ::= *
          else_start ::= * TKN_ELSE
          cond ::= * else_start body

                      TKN_ELSE shift-reduce 16     else_start ::= TKN_ELSE
                          cond shift        59     
                    else_start shift        36     
                     {default} reduce       15     cond ::=

State 19:
          program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars * functions TKN_MAIN body program_end
          functions ::= * function functions
     (32) functions ::= *
          function ::= * TKN_VOID function_id TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end

                      TKN_VOID shift        31     
                     functions shift        67     
                      function shift        17     
                     {default} reduce       32     functions ::=

State 20:
     (18) expression ::= exp *
          expression ::= exp * comp exp
          comp ::= * TKN_LT
          comp ::= * TKN_GT
          comp ::= * TKN_NE

                        TKN_LT shift-reduce 23     comp ::= TKN_LT
                        TKN_GT shift-reduce 24     comp ::= TKN_GT
                        TKN_NE shift-reduce 25     comp ::= TKN_NE
                          comp shift        12     
                     {default} reduce       18     expression ::= exp

State 21:
          type ::= * TKN_INT
          type ::= * TKN_FLOAT
          params ::= TKN_ID TKN_COLON * type
          params ::= TKN_ID TKN_COLON * type TKN_COMMA params

                       TKN_INT shift-reduce 29     type ::= TKN_INT
                     TKN_FLOAT shift-reduce 30     type ::= TKN_FLOAT
                          type shift        45     

State 22:
          vars_prm ::= vars_prm_prm TKN_COLON * type TKN_SEMI_COLON
          vars_prm ::= vars_prm_prm TKN_COLON * type TKN_SEMI_COLON vars_prm
          type ::= * TKN_INT
          type ::= * TKN_FLOAT

                       TKN_INT shift-reduce 29     type ::= TKN_INT
                     TKN_FLOAT shift-reduce 30     type ::= TKN_FLOAT
                          type shift        49     

State 23:
     (21) termino ::= factor *
          termino_begin ::= factor * oper
          oper ::= * TKN_MULT
          oper ::= * TKN_DIV

                      TKN_MULT shift-reduce 65     oper ::= TKN_MULT
                       TKN_DIV shift-reduce 66     oper ::= TKN_DIV
                          oper shift-reduce 22     termino_begin ::= factor oper
                     {default} reduce       21     termino ::= factor

State 24:
     (51) exp ::= termino *
          exp_begin ::= termino * sign
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                      TKN_PLUS shift-reduce 67     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 68     sign ::= TKN_MINUS
                          sign shift-reduce 20     exp_begin ::= termino sign
                     {default} reduce       51     exp ::= termino

State 25:
          params ::= * TKN_ID TKN_COLON type
          params ::= * TKN_ID TKN_COLON type TKN_COMMA params
          params ::= TKN_ID TKN_COLON type TKN_COMMA * params

                        TKN_ID shift        46     
                        params shift-reduce 8      params ::= TKN_ID TKN_COLON type TKN_COMMA params

State 26:
          function ::= TKN_VOID function_id TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET * function_end
          function_end ::= * TKN_SEMI_COLON

                TKN_SEMI_COLON shift-reduce 9      function_end ::= TKN_SEMI_COLON
                  function_end shift-reduce 33     function ::= TKN_VOID function_id TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end

State 27:
          function ::= TKN_VOID function_id TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars * body TKN_RBRACKET function_end
          body ::= * TKN_LBRACE statements TKN_RBRACE

                    TKN_LBRACE shift        10     
                          body shift        47     

State 28:
          vars_prm_prm ::= * TKN_ID
          vars_prm_prm ::= * TKN_ID TKN_COMMA vars_prm_prm
          vars_prm_prm ::= TKN_ID TKN_COMMA * vars_prm_prm

                        TKN_ID shift        48     
                  vars_prm_prm shift-reduce 5      vars_prm_prm ::= TKN_ID TKN_COMMA vars_prm_prm

State 29:
          vars ::= * TKN_VAR vars_prm
     (28) vars ::= *
          function ::= TKN_VOID function_id TKN_LPAREN params TKN_RPAREN TKN_LBRACKET * vars body TKN_RBRACKET function_end

                       TKN_VAR shift        16     
                          vars shift        27     
                     {default} reduce       28     vars ::=

State 30:
          function ::= TKN_VOID function_id TKN_LPAREN * params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end
          params ::= * TKN_ID TKN_COLON type
          params ::= * TKN_ID TKN_COLON type TKN_COMMA params

                        TKN_ID shift        46     
                        params shift        52     

State 31:
          function ::= TKN_VOID * function_id TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end
          function_id ::= * TKN_ID

                        TKN_ID shift-reduce 6      function_id ::= TKN_ID
                   function_id shift        53     

State 32:
          print_prm ::= expression * print_prm_prm
          print_prm_prm ::= * TKN_COMMA print_prm
     (50) print_prm_prm ::= *

                     TKN_COMMA shift        1      
                 print_prm_prm shift-reduce 48     print_prm ::= expression print_prm_prm
                     {default} reduce       50     print_prm_prm ::=

State 33:
          print_prm ::= TKN_STRING_CONST * print_prm_prm
          print_prm_prm ::= * TKN_COMMA print_prm
     (50) print_prm_prm ::= *

                     TKN_COMMA shift        1      
                 print_prm_prm shift-reduce 47     print_prm ::= TKN_STRING_CONST print_prm_prm
                     {default} reduce       50     print_prm_prm ::=

State 34:
          cycle_end ::= * TKN_SEMI_COLON
          cycle ::= cycle_condition_start cycle_expression TKN_RPAREN body * cycle_end

                TKN_SEMI_COLON shift-reduce 14     cycle_end ::= TKN_SEMI_COLON
                     cycle_end shift-reduce 44     cycle ::= cycle_condition_start cycle_expression TKN_RPAREN body cycle_end

State 35:
          body ::= * TKN_LBRACE statements TKN_RBRACE
          cycle ::= cycle_condition_start cycle_expression TKN_RPAREN * body cycle_end

                    TKN_LBRACE shift        10     
                          body shift        34     

State 36:
          body ::= * TKN_LBRACE statements TKN_RBRACE
          cond ::= else_start * body

                    TKN_LBRACE shift        10     
                          body shift-reduce 17     cond ::= else_start body

State 37:
          body ::= * TKN_LBRACE statements TKN_RBRACE
          condition ::= TKN_IF TKN_LPAREN expression condition_start * body cond TKN_SEMI_COLON

                    TKN_LBRACE shift        10     
                          body shift        18     

State 38:
          condition_start ::= * TKN_RPAREN
          condition ::= TKN_IF TKN_LPAREN expression * condition_start body cond TKN_SEMI_COLON

                    TKN_RPAREN shift-reduce 11     condition_start ::= TKN_RPAREN
               condition_start shift        37     

State 39:
          call ::= expression * call_prm
          call_prm ::= * TKN_COMMA call
     (62) call_prm ::= *

                     TKN_COMMA shift        4      
                      call_prm shift-reduce 60     call ::= expression call_prm
                     {default} reduce       62     call_prm ::=

State 40:
          program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions TKN_MAIN body * program_end
          program_end ::= * TKN_END

                       TKN_END shift-reduce 1      program_end ::= TKN_END
                   program_end shift        66     

State 41:
          program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions TKN_MAIN * body program_end
          body ::= * TKN_LBRACE statements TKN_RBRACE

                    TKN_LBRACE shift        10     
                          body shift        40     

State 42:
          program ::= TKN_PROGRAM program_id TKN_SEMI_COLON * vars functions TKN_MAIN body program_end
          vars ::= * TKN_VAR vars_prm
     (28) vars ::= *

                       TKN_VAR shift        16     
                          vars shift        19     
                     {default} reduce       28     vars ::=

State 43:
          program ::= TKN_PROGRAM * program_id TKN_SEMI_COLON vars functions TKN_MAIN body program_end
          program_id ::= * TKN_ID

                        TKN_ID shift-reduce 0      program_id ::= TKN_ID
                    program_id shift        68     

State 44:
          assign_start ::= TKN_ID * TKN_ASSIGN
          f_call ::= TKN_ID * TKN_LPAREN call TKN_RPAREN TKN_SEMI_COLON

                    TKN_LPAREN shift        5      
                    TKN_ASSIGN shift-reduce 10     assign_start ::= TKN_ID TKN_ASSIGN

State 45:
      (7) params ::= TKN_ID TKN_COLON type *
          params ::= TKN_ID TKN_COLON type * TKN_COMMA params

                     TKN_COMMA shift        25     
                     {default} reduce       7      params ::= TKN_ID TKN_COLON type

State 46:
          params ::= TKN_ID * TKN_COLON type
          params ::= TKN_ID * TKN_COLON type TKN_COMMA params

                     TKN_COLON shift        21     

State 47:
          function ::= TKN_VOID function_id TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body * TKN_RBRACKET function_end

                  TKN_RBRACKET shift        26     

State 48:
      (4) vars_prm_prm ::= TKN_ID *
          vars_prm_prm ::= TKN_ID * TKN_COMMA vars_prm_prm

                     TKN_COMMA shift        28     
                     {default} reduce       4      vars_prm_prm ::= TKN_ID

State 49:
          vars_prm ::= vars_prm_prm TKN_COLON type * TKN_SEMI_COLON
          vars_prm ::= vars_prm_prm TKN_COLON type * TKN_SEMI_COLON vars_prm

                TKN_SEMI_COLON shift        15     

State 50:
          vars_prm ::= vars_prm_prm * TKN_COLON type TKN_SEMI_COLON
          vars_prm ::= vars_prm_prm * TKN_COLON type TKN_SEMI_COLON vars_prm

                     TKN_COLON shift        22     

State 51:
          function ::= TKN_VOID function_id TKN_LPAREN params TKN_RPAREN * TKN_LBRACKET vars body TKN_RBRACKET function_end

                  TKN_LBRACKET shift        29     

State 52:
          function ::= TKN_VOID function_id TKN_LPAREN params * TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end

                    TKN_RPAREN shift        51     

State 53:
          function ::= TKN_VOID function_id * TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end

                    TKN_LPAREN shift        30     

State 54:
          print ::= TKN_PRINT TKN_LPAREN print_prm TKN_RPAREN * TKN_SEMI_COLON

                TKN_SEMI_COLON shift-reduce 46     print ::= TKN_PRINT TKN_LPAREN print_prm TKN_RPAREN TKN_SEMI_COLON

State 55:
          print ::= TKN_PRINT TKN_LPAREN print_prm * TKN_RPAREN TKN_SEMI_COLON

                    TKN_RPAREN shift        54     

State 56:
          print ::= TKN_PRINT * TKN_LPAREN print_prm TKN_RPAREN TKN_SEMI_COLON

                    TKN_LPAREN shift        2      

State 57:
          cycle ::= cycle_condition_start cycle_expression * TKN_RPAREN body cycle_end

                    TKN_RPAREN shift        35     

State 58:
          cycle_condition_start ::= TKN_WHILE * TKN_LPAREN

                    TKN_LPAREN shift-reduce 12     cycle_condition_start ::= TKN_WHILE TKN_LPAREN

State 59:
          condition ::= TKN_IF TKN_LPAREN expression condition_start body cond * TKN_SEMI_COLON

                TKN_SEMI_COLON shift-reduce 43     condition ::= TKN_IF TKN_LPAREN expression condition_start body cond TKN_SEMI_COLON

State 60:
          condition ::= TKN_IF * TKN_LPAREN expression condition_start body cond TKN_SEMI_COLON

                    TKN_LPAREN shift        6      

State 61:
          assign ::= assign_start expression * TKN_SEMI_COLON

                TKN_SEMI_COLON shift-reduce 42     assign ::= assign_start expression TKN_SEMI_COLON

State 62:
          factor ::= TKN_LPAREN expression * TKN_RPAREN

                    TKN_RPAREN shift-reduce 54     factor ::= TKN_LPAREN expression TKN_RPAREN

State 63:
          f_call ::= TKN_ID TKN_LPAREN call TKN_RPAREN * TKN_SEMI_COLON

                TKN_SEMI_COLON shift-reduce 45     f_call ::= TKN_ID TKN_LPAREN call TKN_RPAREN TKN_SEMI_COLON

State 64:
          f_call ::= TKN_ID TKN_LPAREN call * TKN_RPAREN TKN_SEMI_COLON

                    TKN_RPAREN shift        63     

State 65:
          body ::= TKN_LBRACE statements * TKN_RBRACE

                    TKN_RBRACE shift-reduce 34     body ::= TKN_LBRACE statements TKN_RBRACE

State 66:
     (26) program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions TKN_MAIN body program_end *

                             $ reduce       26     program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions TKN_MAIN body program_end

State 67:
          program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions * TKN_MAIN body program_end

                      TKN_MAIN shift        41     

State 68:
          program ::= TKN_PROGRAM program_id * TKN_SEMI_COLON vars functions TKN_MAIN body program_end

                TKN_SEMI_COLON shift        42     

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: TKN_PROGRAM
    2: TKN_SEMI_COLON
    3: TKN_MAIN
    4: TKN_ID
    5: TKN_END
    6: TKN_VAR
    7: TKN_COLON
    8: TKN_COMMA
    9: TKN_INT (precedence=1)
   10: TKN_FLOAT (precedence=1)
   11: TKN_VOID
   12: TKN_LPAREN
   13: TKN_RPAREN
   14: TKN_LBRACKET
   15: TKN_RBRACKET
   16: TKN_LBRACE
   17: TKN_RBRACE
   18: TKN_ASSIGN
   19: TKN_IF (precedence=1)
   20: TKN_WHILE (precedence=1)
   21: TKN_PRINT (precedence=1)
   22: TKN_STRING_CONST (precedence=1)
   23: TKN_ELSE (precedence=1)
   24: TKN_INT_CONST (precedence=1)
   25: TKN_FLOAT_CONST (precedence=1)
   26: TKN_MULT
   27: TKN_DIV
   28: TKN_PLUS
   29: TKN_MINUS
   30: TKN_LT
   31: TKN_GT
   32: TKN_NE
   33: TKN_DO (precedence=1)
   34: vars_prm_prm: TKN_ID
   35: params: TKN_ID
   36: program: TKN_PROGRAM
   37: program_id: TKN_ID
   38: vars: <lambda> TKN_VAR
   39: functions: <lambda> TKN_VOID
   40: body: TKN_LBRACE
   41: program_end: TKN_END
   42: vars_prm: TKN_ID
   43: type: TKN_INT TKN_FLOAT
   44: function: TKN_VOID
   45: function_id: TKN_ID
   46: function_end: TKN_SEMI_COLON
   47: statements: <lambda> TKN_ID TKN_IF TKN_WHILE TKN_PRINT
   48: statement: TKN_ID TKN_IF TKN_WHILE TKN_PRINT
   49: assign: TKN_ID
   50: condition: TKN_IF
   51: cycle: TKN_WHILE
   52: f_call: TKN_ID
   53: print: TKN_PRINT
   54: assign_start: TKN_ID
   55: expression: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   56: condition_start: TKN_RPAREN
   57: cond: <lambda> TKN_ELSE
   58: cycle_condition_start: TKN_WHILE
   59: cycle_expression: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   60: cycle_end: TKN_SEMI_COLON
   61: call: <lambda> TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   62: print_prm: TKN_ID TKN_LPAREN TKN_STRING_CONST TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   63: print_prm_prm: <lambda> TKN_COMMA
   64: else_start: TKN_ELSE
   65: exp: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   66: comp: TKN_LT TKN_GT TKN_NE
   67: termino: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   68: exp_begin: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   69: sign: TKN_PLUS TKN_MINUS
   70: factor: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   71: termino_begin: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   72: oper: TKN_MULT TKN_DIV
   73: factor_prm: TKN_ID TKN_INT_CONST TKN_FLOAT_CONST
   74: cte: TKN_INT_CONST TKN_FLOAT_CONST
   75: call_prm: <lambda> TKN_COMMA
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ TKN_PROGRAM TKN_SEMI_COLON TKN_MAIN TKN_END TKN_VAR TKN_COLON TKN_COMMA
TKN_INT TKN_FLOAT TKN_VOID TKN_LPAREN TKN_RPAREN TKN_LBRACKET TKN_RBRACKET
TKN_LBRACE TKN_RBRACE TKN_IF TKN_WHILE TKN_PRINT TKN_STRING_CONST TKN_ELSE
TKN_INT_CONST TKN_FLOAT_CONST TKN_MULT TKN_DIV TKN_PLUS TKN_MINUS TKN_DO
params program program_id vars functions body program_end vars_prm function
function_id function_end statements statement assign condition cycle f_call
print assign_start expression condition_start cond cycle_condition_start
cycle_expression cycle_end call print_prm print_prm_prm else_start exp comp
termino exp_begin termino_begin factor_prm cte call_prm
----------------------------------------------------
Rules:
   0: program_id ::= TKN_ID.
   1: program_end ::= TKN_END.
   2: vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON.
   3: vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON vars_prm.
   4: vars_prm_prm ::= TKN_ID.
   5: vars_prm_prm ::= TKN_ID TKN_COMMA vars_prm_prm.
   6: function_id ::= TKN_ID.
   7: params ::= TKN_ID TKN_COLON type.
   8: params ::= TKN_ID TKN_COLON type TKN_COMMA params.
   9: function_end ::= TKN_SEMI_COLON.
  10: assign_start ::= TKN_ID TKN_ASSIGN.
  11: condition_start ::= TKN_RPAREN.
  12: cycle_condition_start ::= TKN_WHILE TKN_LPAREN. [TKN_WHILE precedence=1]
  13: cycle_expression ::= expression.
  14: cycle_end ::= TKN_SEMI_COLON.
  15: cond ::=.
  16: else_start ::= TKN_ELSE. [TKN_ELSE precedence=1]
  17: cond ::= else_start body.
  18: expression ::= exp.
  19: expression ::= exp comp exp.
  20: exp_begin ::= termino sign.
  21: termino ::= factor.
  22: termino_begin ::= factor oper.
  23: comp ::= TKN_LT.
  24: comp ::= TKN_GT.
  25: comp ::= TKN_NE.
  26: program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions TKN_MAIN body program_end.
  27: vars ::= TKN_VAR vars_prm.
  28: vars ::=.
  29: type ::= TKN_INT. [TKN_INT precedence=1]
  30: type ::= TKN_FLOAT. [TKN_FLOAT precedence=1]
  31: functions ::= function functions.
  32: functions ::=.
  33: function ::= TKN_VOID function_id TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end.
  34: body ::= TKN_LBRACE statements TKN_RBRACE.
  35: statements ::= statement statements.
  36: statements ::=.
  37: statement ::= assign.
  38: statement ::= condition.
  39: statement ::= cycle.
  40: statement ::= f_call.
  41: statement ::= print.
  42: assign ::= assign_start expression TKN_SEMI_COLON.
  43: condition ::= TKN_IF TKN_LPAREN expression condition_start body cond TKN_SEMI_COLON. [TKN_IF precedence=1]
  44: cycle ::= cycle_condition_start cycle_expression TKN_RPAREN body cycle_end.
  45: f_call ::= TKN_ID TKN_LPAREN call TKN_RPAREN TKN_SEMI_COLON.
  46: print ::= TKN_PRINT TKN_LPAREN print_prm TKN_RPAREN TKN_SEMI_COLON. [TKN_PRINT precedence=1]
  47: print_prm ::= TKN_STRING_CONST print_prm_prm. [TKN_STRING_CONST precedence=1]
  48: print_prm ::= expression print_prm_prm.
  49: print_prm_prm ::= TKN_COMMA print_prm.
  50: print_prm_prm ::=.
  51: exp ::= termino.
  52: exp ::= exp_begin exp.
  53: termino ::= termino_begin termino.
  54: factor ::= TKN_LPAREN expression TKN_RPAREN.
  55: factor ::= sign factor_prm.
  56: factor ::= factor_prm.
  57: factor_prm ::= TKN_ID.
  58: factor_prm ::= cte.
  59: call ::=.
  60: call ::= expression call_prm.
  61: call_prm ::= TKN_COMMA call.
  62: call_prm ::=.
  63: cte ::= TKN_INT_CONST. [TKN_INT_CONST precedence=1]
  64: cte ::= TKN_FLOAT_CONST. [TKN_FLOAT_CONST precedence=1]
  65: oper ::= TKN_MULT.
  66: oper ::= TKN_DIV.
  67: sign ::= TKN_PLUS.
  68: sign ::= TKN_MINUS.
