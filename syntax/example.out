State 0:
          program ::= * TKN_PROGRAM program_id TKN_SEMI_COLON vars functions program_main body program_end

                   TKN_PROGRAM shift        44     
                       program accept

State 1:
          string_to_print ::= * TKN_STRING_CONST
          expression_to_print ::= * expression
          print_prm ::= * string_to_print print_prm_prm
          print_prm ::= * expression_to_print print_prm_prm
          print_prm_prm ::= TKN_COMMA * print_prm
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
              TKN_STRING_CONST shift-reduce 21     string_to_print ::= TKN_STRING_CONST
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                    expression shift-reduce 22     expression_to_print ::= expression
                     print_prm shift-reduce 62     print_prm_prm ::= TKN_COMMA print_prm
               string_to_print shift        33     
           expression_to_print shift        32     
                           exp shift        22     
                       termino shift        26     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */

State 2:
          print ::= TKN_PRINT TKN_LPAREN * print_prm TKN_RPAREN TKN_SEMI_COLON
          string_to_print ::= * TKN_STRING_CONST
          expression_to_print ::= * expression
          print_prm ::= * string_to_print print_prm_prm
          print_prm ::= * expression_to_print print_prm_prm
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
              TKN_STRING_CONST shift-reduce 21     string_to_print ::= TKN_STRING_CONST
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                    expression shift-reduce 22     expression_to_print ::= expression
                     print_prm shift        57     
               string_to_print shift        33     
           expression_to_print shift        32     
                           exp shift        22     
                       termino shift        26     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */

State 3:
     (55) call ::= *
          call ::= * call_expression call_prm
          call_expression ::= * expression
          call_prm ::= TKN_COMMA * call
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                    expression shift-reduce 20     call_expression ::= expression
                          call shift-reduce 57     call_prm ::= TKN_COMMA call
               call_expression shift        34     
                           exp shift        22     
                       termino shift        26     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */
                     {default} reduce       55     call ::=

State 4:
          f_call ::= f_call_start * call TKN_RPAREN TKN_SEMI_COLON
     (55) call ::= *
          call ::= * call_expression call_prm
          call_expression ::= * expression
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                    expression shift-reduce 20     call_expression ::= expression
                          call shift        60     
               call_expression shift        34     
                           exp shift        22     
                       termino shift        26     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */
                     {default} reduce       55     call ::=

State 5:
          cycle_expression ::= * expression
          cycle ::= cycle_condition_start * cycle_expression TKN_RPAREN body cycle_end
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                    expression shift-reduce 16     cycle_expression ::= expression
              cycle_expression shift        61     
                           exp shift        22     
                       termino shift        26     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */

State 6:
          condition ::= TKN_IF TKN_LPAREN * expression condition_start body cond TKN_SEMI_COLON
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                    expression shift        39     
                           exp shift        22     
                       termino shift        26     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */

State 7:
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= TKN_LPAREN * expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                    expression shift        65     
                           exp shift        22     
                       termino shift        26     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */

State 8:
          assign ::= assign_start * expression TKN_SEMI_COLON
          expression ::= * exp
          expression ::= * exp comp exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                    expression shift        66     
                           exp shift        22     
                       termino shift        26     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */

State 9:
          statements ::= * statement statements
          statements ::= statement * statements
     (46) statements ::= *
          statement ::= * assign
          statement ::= * condition
          statement ::= * cycle
          statement ::= * f_call
          statement ::= * print
          assign_start ::= * TKN_ID TKN_ASSIGN
          assign ::= * assign_start expression TKN_SEMI_COLON
          condition ::= * TKN_IF TKN_LPAREN expression condition_start body cond TKN_SEMI_COLON
          cycle_condition_start ::= * TKN_WHILE TKN_LPAREN
          cycle ::= * cycle_condition_start cycle_expression TKN_RPAREN body cycle_end
          f_call ::= * f_call_start call TKN_RPAREN TKN_SEMI_COLON
          f_call_start ::= * TKN_ID TKN_LPAREN
          print ::= * TKN_PRINT TKN_LPAREN print_prm TKN_RPAREN TKN_SEMI_COLON

                        TKN_ID shift        45     
                        TKN_IF shift        64     
                     TKN_WHILE shift        62     
                     TKN_PRINT shift        58     
                  f_call_start shift        4      
                    statements shift-reduce 45     statements ::= statement statements
                     statement shift        9      
                        assign shift        9        /* because assign==statement */
                     condition shift        9        /* because condition==statement */
                         cycle shift        9        /* because cycle==statement */
                        f_call shift        9        /* because f_call==statement */
                         print shift        9        /* because print==statement */
                  assign_start shift        8      
         cycle_condition_start shift        5      
                     {default} reduce       46     statements ::=

State 10:
          body ::= TKN_LBRACE * statements TKN_RBRACE
          statements ::= * statement statements
     (46) statements ::= *
          statement ::= * assign
          statement ::= * condition
          statement ::= * cycle
          statement ::= * f_call
          statement ::= * print
          assign_start ::= * TKN_ID TKN_ASSIGN
          assign ::= * assign_start expression TKN_SEMI_COLON
          condition ::= * TKN_IF TKN_LPAREN expression condition_start body cond TKN_SEMI_COLON
          cycle_condition_start ::= * TKN_WHILE TKN_LPAREN
          cycle ::= * cycle_condition_start cycle_expression TKN_RPAREN body cycle_end
          f_call ::= * f_call_start call TKN_RPAREN TKN_SEMI_COLON
          f_call_start ::= * TKN_ID TKN_LPAREN
          print ::= * TKN_PRINT TKN_LPAREN print_prm TKN_RPAREN TKN_SEMI_COLON

                        TKN_ID shift        45     
                        TKN_IF shift        64     
                     TKN_WHILE shift        62     
                     TKN_PRINT shift        58     
                  f_call_start shift        4      
                    statements shift        67     
                     statement shift        9      
                        assign shift        9        /* because assign==statement */
                     condition shift        9        /* because condition==statement */
                         cycle shift        9        /* because cycle==statement */
                        f_call shift        9        /* because f_call==statement */
                         print shift        9        /* because print==statement */
                  assign_start shift        8      
         cycle_condition_start shift        5      
                     {default} reduce       46     statements ::=

State 11:
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          exp ::= exp_begin * exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                           exp shift-reduce 65     exp ::= exp_begin exp
                       termino shift        26     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */

State 12:
          expression ::= exp comp * exp
          exp ::= * termino
          exp_begin ::= * termino sign
          exp ::= * exp_begin exp
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                           exp shift-reduce 27     expression ::= exp comp exp
                       termino shift        26     
                     exp_begin shift        11     
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */

State 13:
          termino ::= * factor
          termino_begin ::= * factor oper
          termino ::= * termino_begin termino
          termino ::= termino_begin * termino
          factor ::= * TKN_LPAREN expression TKN_RPAREN
          factor ::= * sign factor_prm
          factor ::= * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                    TKN_LPAREN shift        7      
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                     cte_float shift        25       /* because cte_float==factor */
                       cte_int shift        25       /* because cte_int==factor */
                       termino shift-reduce 66     termino ::= termino_begin termino
                          sign shift        14     
                        factor shift        25     
                 termino_begin shift        13     
                    factor_prm shift        25       /* because factor_prm==factor */

State 14:
          factor ::= sign * factor_prm
          factor_prm ::= * TKN_ID
          factor_prm ::= * cte_int
          factor_prm ::= * cte_float
          cte_int ::= * TKN_INT_CONST
          cte_float ::= * TKN_FLOAT_CONST

                        TKN_ID shift-reduce 31     factor_prm ::= TKN_ID
                 TKN_INT_CONST shift-reduce 32     cte_int ::= TKN_INT_CONST
               TKN_FLOAT_CONST shift-reduce 33     cte_float ::= TKN_FLOAT_CONST
                     cte_float shift-reduce 68     factor ::= sign factor_prm  /* because cte_float==factor_prm */
                       cte_int shift-reduce 68     factor ::= sign factor_prm  /* because cte_int==factor_prm */
                    factor_prm shift-reduce 68     factor ::= sign factor_prm

State 15:
          params ::= * TKN_ID TKN_COLON type
          params ::= * param_def TKN_COMMA params
          params ::= param_def TKN_COMMA * params
          param_def ::= * TKN_ID TKN_COLON type

                        TKN_ID shift        48     
                        params shift-reduce 43     params ::= param_def TKN_COMMA params
                     param_def shift        46     

State 16:
          vars_prm ::= * vars_prm_prm TKN_COLON type TKN_SEMI_COLON
      (3) vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON *
          vars_prm ::= * vars_prm_prm TKN_COLON type TKN_SEMI_COLON vars_prm
          vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON * vars_prm
          vars_prm_prm ::= * TKN_ID
          vars_prm_prm ::= * TKN_ID TKN_COMMA vars_prm_prm

                        TKN_ID shift        50     
                  vars_prm_prm shift        52     
                      vars_prm shift-reduce 4      vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON vars_prm
                     {default} reduce       3      vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON

State 17:
          vars ::= TKN_VAR * vars_prm
          vars_prm ::= * vars_prm_prm TKN_COLON type TKN_SEMI_COLON
          vars_prm ::= * vars_prm_prm TKN_COLON type TKN_SEMI_COLON vars_prm
          vars_prm_prm ::= * TKN_ID
          vars_prm_prm ::= * TKN_ID TKN_COMMA vars_prm_prm

                        TKN_ID shift        50     
                  vars_prm_prm shift        52     
                      vars_prm shift-reduce 38     vars ::= TKN_VAR vars_prm

State 18:
          function ::= TKN_VOID function_start TKN_LPAREN * params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end
          params ::= * TKN_ID TKN_COLON type
          params ::= * param_def TKN_COMMA params
          param_def ::= * TKN_ID TKN_COLON type

                        TKN_ID shift        48     
                        params shift        54     
                     param_def shift        46     

State 19:
          functions ::= * function functions
          functions ::= function * functions
     (41) functions ::= *
          function ::= * TKN_VOID function_start TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end

                      TKN_VOID shift        31     
                     functions shift-reduce 40     functions ::= function functions
                      function shift        19     
                     {default} reduce       41     functions ::=

State 20:
          condition ::= TKN_IF TKN_LPAREN expression condition_start body * cond TKN_SEMI_COLON
     (23) cond ::= *
          else_start ::= * TKN_ELSE
          cond ::= * else_start body

                      TKN_ELSE shift-reduce 24     else_start ::= TKN_ELSE
                          cond shift        63     
                    else_start shift        37     
                     {default} reduce       23     cond ::=

State 21:
          program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars * functions program_main body program_end
          functions ::= * function functions
     (41) functions ::= *
          function ::= * TKN_VOID function_start TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end

                      TKN_VOID shift        31     
                     functions shift        42     
                      function shift        19     
                     {default} reduce       41     functions ::=

State 22:
     (26) expression ::= exp *
          expression ::= exp * comp exp
          comp ::= * TKN_LT
          comp ::= * TKN_GT
          comp ::= * TKN_NE

                        TKN_LT shift-reduce 34     comp ::= TKN_LT
                        TKN_GT shift-reduce 35     comp ::= TKN_GT
                        TKN_NE shift-reduce 36     comp ::= TKN_NE
                          comp shift        12     
                     {default} reduce       26     expression ::= exp

State 23:
          type ::= * TKN_INT
          type ::= * TKN_FLOAT
          params ::= TKN_ID TKN_COLON * type
          param_def ::= TKN_ID TKN_COLON * type

                       TKN_INT shift-reduce 7      type ::= TKN_INT
                     TKN_FLOAT shift-reduce 8      type ::= TKN_FLOAT
                          type shift        47     

State 24:
          vars_prm ::= vars_prm_prm TKN_COLON * type TKN_SEMI_COLON
          vars_prm ::= vars_prm_prm TKN_COLON * type TKN_SEMI_COLON vars_prm
          type ::= * TKN_INT
          type ::= * TKN_FLOAT

                       TKN_INT shift-reduce 7      type ::= TKN_INT
                     TKN_FLOAT shift-reduce 8      type ::= TKN_FLOAT
                          type shift        51     

State 25:
     (29) termino ::= factor *
          termino_begin ::= factor * oper
          oper ::= * TKN_MULT
          oper ::= * TKN_DIV

                      TKN_MULT shift-reduce 72     oper ::= TKN_MULT
                       TKN_DIV shift-reduce 73     oper ::= TKN_DIV
                          oper shift-reduce 30     termino_begin ::= factor oper
                     {default} reduce       29     termino ::= factor

State 26:
     (64) exp ::= termino *
          exp_begin ::= termino * sign
          sign ::= * TKN_PLUS
          sign ::= * TKN_MINUS

                      TKN_PLUS shift-reduce 74     sign ::= TKN_PLUS
                     TKN_MINUS shift-reduce 75     sign ::= TKN_MINUS
                          sign shift-reduce 28     exp_begin ::= termino sign
                     {default} reduce       64     exp ::= termino

State 27:
          function ::= TKN_VOID function_start TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET * function_end
          function_end ::= * TKN_SEMI_COLON

                TKN_SEMI_COLON shift-reduce 12     function_end ::= TKN_SEMI_COLON
                  function_end shift-reduce 42     function ::= TKN_VOID function_start TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end

State 28:
          function ::= TKN_VOID function_start TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars * body TKN_RBRACKET function_end
          body ::= * TKN_LBRACE statements TKN_RBRACE

                    TKN_LBRACE shift        10     
                          body shift        49     

State 29:
          vars_prm_prm ::= * TKN_ID
          vars_prm_prm ::= * TKN_ID TKN_COMMA vars_prm_prm
          vars_prm_prm ::= TKN_ID TKN_COMMA * vars_prm_prm

                        TKN_ID shift        50     
                  vars_prm_prm shift-reduce 6      vars_prm_prm ::= TKN_ID TKN_COMMA vars_prm_prm

State 30:
          vars ::= * TKN_VAR vars_prm
     (39) vars ::= *
          function ::= TKN_VOID function_start TKN_LPAREN params TKN_RPAREN TKN_LBRACKET * vars body TKN_RBRACKET function_end

                       TKN_VAR shift        17     
                          vars shift        28     
                     {default} reduce       39     vars ::=

State 31:
          function ::= TKN_VOID * function_start TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end
          function_start ::= * TKN_ID

                        TKN_ID shift-reduce 9      function_start ::= TKN_ID
                function_start shift        55     

State 32:
          print_prm ::= expression_to_print * print_prm_prm
          print_prm_prm ::= * TKN_COMMA print_prm
     (63) print_prm_prm ::= *

                     TKN_COMMA shift        1      
                 print_prm_prm shift-reduce 61     print_prm ::= expression_to_print print_prm_prm
                     {default} reduce       63     print_prm_prm ::=

State 33:
          print_prm ::= string_to_print * print_prm_prm
          print_prm_prm ::= * TKN_COMMA print_prm
     (63) print_prm_prm ::= *

                     TKN_COMMA shift        1      
                 print_prm_prm shift-reduce 60     print_prm ::= string_to_print print_prm_prm
                     {default} reduce       63     print_prm_prm ::=

State 34:
          call ::= call_expression * call_prm
          call_prm ::= * TKN_COMMA call
     (58) call_prm ::= *

                     TKN_COMMA shift        3      
                      call_prm shift-reduce 56     call ::= call_expression call_prm
                     {default} reduce       58     call_prm ::=

State 35:
          cycle_end ::= * TKN_SEMI_COLON
          cycle ::= cycle_condition_start cycle_expression TKN_RPAREN body * cycle_end

                TKN_SEMI_COLON shift-reduce 17     cycle_end ::= TKN_SEMI_COLON
                     cycle_end shift-reduce 54     cycle ::= cycle_condition_start cycle_expression TKN_RPAREN body cycle_end

State 36:
          body ::= * TKN_LBRACE statements TKN_RBRACE
          cycle ::= cycle_condition_start cycle_expression TKN_RPAREN * body cycle_end

                    TKN_LBRACE shift        10     
                          body shift        35     

State 37:
          body ::= * TKN_LBRACE statements TKN_RBRACE
          cond ::= else_start * body

                    TKN_LBRACE shift        10     
                          body shift-reduce 25     cond ::= else_start body

State 38:
          body ::= * TKN_LBRACE statements TKN_RBRACE
          condition ::= TKN_IF TKN_LPAREN expression condition_start * body cond TKN_SEMI_COLON

                    TKN_LBRACE shift        10     
                          body shift        20     

State 39:
          condition_start ::= * TKN_RPAREN
          condition ::= TKN_IF TKN_LPAREN expression * condition_start body cond TKN_SEMI_COLON

                    TKN_RPAREN shift-reduce 14     condition_start ::= TKN_RPAREN
               condition_start shift        38     

State 40:
          program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions program_main body * program_end
          program_end ::= * TKN_END

                       TKN_END shift-reduce 2      program_end ::= TKN_END
                   program_end shift        68     

State 41:
          program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions program_main * body program_end
          body ::= * TKN_LBRACE statements TKN_RBRACE

                    TKN_LBRACE shift        10     
                          body shift        40     

State 42:
          program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions * program_main body program_end
          program_main ::= * TKN_MAIN

                      TKN_MAIN shift-reduce 1      program_main ::= TKN_MAIN
                  program_main shift        41     

State 43:
          program ::= TKN_PROGRAM program_id TKN_SEMI_COLON * vars functions program_main body program_end
          vars ::= * TKN_VAR vars_prm
     (39) vars ::= *

                       TKN_VAR shift        17     
                          vars shift        21     
                     {default} reduce       39     vars ::=

State 44:
          program ::= TKN_PROGRAM * program_id TKN_SEMI_COLON vars functions program_main body program_end
          program_id ::= * TKN_ID

                        TKN_ID shift-reduce 0      program_id ::= TKN_ID
                    program_id shift        69     

State 45:
          assign_start ::= TKN_ID * TKN_ASSIGN
          f_call_start ::= TKN_ID * TKN_LPAREN

                    TKN_LPAREN shift-reduce 19     f_call_start ::= TKN_ID TKN_LPAREN
                    TKN_ASSIGN shift-reduce 13     assign_start ::= TKN_ID TKN_ASSIGN

State 46:
          params ::= param_def * TKN_COMMA params

                     TKN_COMMA shift        15     

State 47:
     (10) params ::= TKN_ID TKN_COLON type *
     (11) param_def ::= TKN_ID TKN_COLON type *

                    TKN_RPAREN reduce       10     params ::= TKN_ID TKN_COLON type
                     {default} reduce       11     param_def ::= TKN_ID TKN_COLON type

State 48:
          params ::= TKN_ID * TKN_COLON type
          param_def ::= TKN_ID * TKN_COLON type

                     TKN_COLON shift        23     

State 49:
          function ::= TKN_VOID function_start TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body * TKN_RBRACKET function_end

                  TKN_RBRACKET shift        27     

State 50:
      (5) vars_prm_prm ::= TKN_ID *
          vars_prm_prm ::= TKN_ID * TKN_COMMA vars_prm_prm

                     TKN_COMMA shift        29     
                     {default} reduce       5      vars_prm_prm ::= TKN_ID

State 51:
          vars_prm ::= vars_prm_prm TKN_COLON type * TKN_SEMI_COLON
          vars_prm ::= vars_prm_prm TKN_COLON type * TKN_SEMI_COLON vars_prm

                TKN_SEMI_COLON shift        16     

State 52:
          vars_prm ::= vars_prm_prm * TKN_COLON type TKN_SEMI_COLON
          vars_prm ::= vars_prm_prm * TKN_COLON type TKN_SEMI_COLON vars_prm

                     TKN_COLON shift        24     

State 53:
          function ::= TKN_VOID function_start TKN_LPAREN params TKN_RPAREN * TKN_LBRACKET vars body TKN_RBRACKET function_end

                  TKN_LBRACKET shift        30     

State 54:
          function ::= TKN_VOID function_start TKN_LPAREN params * TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end

                    TKN_RPAREN shift        53     

State 55:
          function ::= TKN_VOID function_start * TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end

                    TKN_LPAREN shift        18     

State 56:
          print ::= TKN_PRINT TKN_LPAREN print_prm TKN_RPAREN * TKN_SEMI_COLON

                TKN_SEMI_COLON shift-reduce 59     print ::= TKN_PRINT TKN_LPAREN print_prm TKN_RPAREN TKN_SEMI_COLON

State 57:
          print ::= TKN_PRINT TKN_LPAREN print_prm * TKN_RPAREN TKN_SEMI_COLON

                    TKN_RPAREN shift        56     

State 58:
          print ::= TKN_PRINT * TKN_LPAREN print_prm TKN_RPAREN TKN_SEMI_COLON

                    TKN_LPAREN shift        2      

State 59:
          f_call ::= f_call_start call TKN_RPAREN * TKN_SEMI_COLON

                TKN_SEMI_COLON shift-reduce 18     f_call ::= f_call_start call TKN_RPAREN TKN_SEMI_COLON

State 60:
          f_call ::= f_call_start call * TKN_RPAREN TKN_SEMI_COLON

                    TKN_RPAREN shift        59     

State 61:
          cycle ::= cycle_condition_start cycle_expression * TKN_RPAREN body cycle_end

                    TKN_RPAREN shift        36     

State 62:
          cycle_condition_start ::= TKN_WHILE * TKN_LPAREN

                    TKN_LPAREN shift-reduce 15     cycle_condition_start ::= TKN_WHILE TKN_LPAREN

State 63:
          condition ::= TKN_IF TKN_LPAREN expression condition_start body cond * TKN_SEMI_COLON

                TKN_SEMI_COLON shift-reduce 53     condition ::= TKN_IF TKN_LPAREN expression condition_start body cond TKN_SEMI_COLON

State 64:
          condition ::= TKN_IF * TKN_LPAREN expression condition_start body cond TKN_SEMI_COLON

                    TKN_LPAREN shift        6      

State 65:
          factor ::= TKN_LPAREN expression * TKN_RPAREN

                    TKN_RPAREN shift-reduce 67     factor ::= TKN_LPAREN expression TKN_RPAREN

State 66:
          assign ::= assign_start expression * TKN_SEMI_COLON

                TKN_SEMI_COLON shift-reduce 52     assign ::= assign_start expression TKN_SEMI_COLON

State 67:
          body ::= TKN_LBRACE statements * TKN_RBRACE

                    TKN_RBRACE shift-reduce 44     body ::= TKN_LBRACE statements TKN_RBRACE

State 68:
     (37) program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions program_main body program_end *

                             $ reduce       37     program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions program_main body program_end

State 69:
          program ::= TKN_PROGRAM program_id * TKN_SEMI_COLON vars functions program_main body program_end

                TKN_SEMI_COLON shift        43     

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: TKN_PROGRAM
    2: TKN_SEMI_COLON
    3: TKN_ID
    4: TKN_MAIN
    5: TKN_END
    6: TKN_VAR
    7: TKN_COLON
    8: TKN_COMMA
    9: TKN_INT (precedence=1)
   10: TKN_FLOAT (precedence=1)
   11: TKN_VOID
   12: TKN_LPAREN
   13: TKN_RPAREN
   14: TKN_LBRACKET
   15: TKN_RBRACKET
   16: TKN_LBRACE
   17: TKN_RBRACE
   18: TKN_ASSIGN
   19: TKN_IF (precedence=1)
   20: TKN_WHILE (precedence=1)
   21: TKN_PRINT (precedence=1)
   22: TKN_STRING_CONST (precedence=1)
   23: TKN_ELSE (precedence=1)
   24: TKN_INT_CONST (precedence=1)
   25: TKN_FLOAT_CONST (precedence=1)
   26: TKN_MULT
   27: TKN_DIV
   28: TKN_PLUS
   29: TKN_MINUS
   30: TKN_LT
   31: TKN_GT
   32: TKN_NE
   33: TKN_DO (precedence=1)
   34: vars_prm_prm: TKN_ID
   35: params: TKN_ID
   36: param_def: TKN_ID
   37: cte_float: TKN_FLOAT_CONST
   38: cte_int: TKN_INT_CONST
   39: type: TKN_INT TKN_FLOAT
   40: f_call_start: TKN_ID
   41: program: TKN_PROGRAM
   42: program_id: TKN_ID
   43: vars: <lambda> TKN_VAR
   44: functions: <lambda> TKN_VOID
   45: program_main: TKN_MAIN
   46: body: TKN_LBRACE
   47: program_end: TKN_END
   48: vars_prm: TKN_ID
   49: function: TKN_VOID
   50: function_start: TKN_ID
   51: function_end: TKN_SEMI_COLON
   52: statements: <lambda> TKN_ID TKN_IF TKN_WHILE TKN_PRINT
   53: statement: TKN_ID TKN_IF TKN_WHILE TKN_PRINT
   54: assign: TKN_ID
   55: condition: TKN_IF
   56: cycle: TKN_WHILE
   57: f_call: TKN_ID
   58: print: TKN_PRINT
   59: assign_start: TKN_ID
   60: expression: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   61: condition_start: TKN_RPAREN
   62: cond: <lambda> TKN_ELSE
   63: cycle_condition_start: TKN_WHILE
   64: cycle_expression: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   65: cycle_end: TKN_SEMI_COLON
   66: call: <lambda> TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   67: call_expression: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   68: call_prm: <lambda> TKN_COMMA
   69: print_prm: TKN_ID TKN_LPAREN TKN_STRING_CONST TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   70: string_to_print: TKN_STRING_CONST
   71: expression_to_print: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   72: print_prm_prm: <lambda> TKN_COMMA
   73: else_start: TKN_ELSE
   74: exp: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   75: comp: TKN_LT TKN_GT TKN_NE
   76: termino: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   77: exp_begin: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   78: sign: TKN_PLUS TKN_MINUS
   79: factor: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   80: termino_begin: TKN_ID TKN_LPAREN TKN_INT_CONST TKN_FLOAT_CONST TKN_PLUS TKN_MINUS
   81: oper: TKN_MULT TKN_DIV
   82: factor_prm: TKN_ID TKN_INT_CONST TKN_FLOAT_CONST
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ TKN_PROGRAM TKN_SEMI_COLON TKN_MAIN TKN_END TKN_VAR TKN_COLON TKN_COMMA
TKN_VOID TKN_LPAREN TKN_RPAREN TKN_LBRACKET TKN_RBRACKET TKN_LBRACE
TKN_RBRACE TKN_IF TKN_WHILE TKN_PRINT TKN_ELSE TKN_MULT TKN_DIV TKN_PLUS
TKN_MINUS TKN_DO params param_def cte_float cte_int program program_id vars
functions program_main body program_end vars_prm function function_start
function_end statements statement assign condition cycle f_call print
assign_start condition_start cond cycle_condition_start cycle_expression
cycle_end call call_expression call_prm print_prm string_to_print
expression_to_print print_prm_prm else_start exp comp termino exp_begin
termino_begin factor_prm
----------------------------------------------------
Rules:
   0: program_id ::= TKN_ID.
   1: program_main ::= TKN_MAIN.
   2: program_end ::= TKN_END.
   3: vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON.
   4: vars_prm ::= vars_prm_prm TKN_COLON type TKN_SEMI_COLON vars_prm.
   5: vars_prm_prm ::= TKN_ID.
   6: vars_prm_prm ::= TKN_ID TKN_COMMA vars_prm_prm.
   7: type ::= TKN_INT. [TKN_INT precedence=1]
   8: type ::= TKN_FLOAT. [TKN_FLOAT precedence=1]
   9: function_start ::= TKN_ID.
  10: params ::= TKN_ID TKN_COLON type.
  11: param_def ::= TKN_ID TKN_COLON type.
  12: function_end ::= TKN_SEMI_COLON.
  13: assign_start ::= TKN_ID TKN_ASSIGN.
  14: condition_start ::= TKN_RPAREN.
  15: cycle_condition_start ::= TKN_WHILE TKN_LPAREN. [TKN_WHILE precedence=1]
  16: cycle_expression ::= expression.
  17: cycle_end ::= TKN_SEMI_COLON.
  18: f_call ::= f_call_start call TKN_RPAREN TKN_SEMI_COLON.
  19: f_call_start ::= TKN_ID TKN_LPAREN.
  20: call_expression ::= expression.
  21: string_to_print ::= TKN_STRING_CONST. [TKN_STRING_CONST precedence=1]
  22: expression_to_print ::= expression.
  23: cond ::=.
  24: else_start ::= TKN_ELSE. [TKN_ELSE precedence=1]
  25: cond ::= else_start body.
  26: expression ::= exp.
  27: expression ::= exp comp exp.
  28: exp_begin ::= termino sign.
  29: termino ::= factor.
  30: termino_begin ::= factor oper.
  31: factor_prm ::= TKN_ID.
  32: cte_int ::= TKN_INT_CONST. [TKN_INT_CONST precedence=1]
  33: cte_float ::= TKN_FLOAT_CONST. [TKN_FLOAT_CONST precedence=1]
  34: comp ::= TKN_LT.
  35: comp ::= TKN_GT.
  36: comp ::= TKN_NE.
  37: program ::= TKN_PROGRAM program_id TKN_SEMI_COLON vars functions program_main body program_end.
  38: vars ::= TKN_VAR vars_prm.
  39: vars ::=.
  40: functions ::= function functions.
  41: functions ::=.
  42: function ::= TKN_VOID function_start TKN_LPAREN params TKN_RPAREN TKN_LBRACKET vars body TKN_RBRACKET function_end.
  43: params ::= param_def TKN_COMMA params.
  44: body ::= TKN_LBRACE statements TKN_RBRACE.
  45: statements ::= statement statements.
  46: statements ::=.
  47: statement ::= assign.
  48: statement ::= condition.
  49: statement ::= cycle.
  50: statement ::= f_call.
  51: statement ::= print.
  52: assign ::= assign_start expression TKN_SEMI_COLON.
  53: condition ::= TKN_IF TKN_LPAREN expression condition_start body cond TKN_SEMI_COLON. [TKN_IF precedence=1]
  54: cycle ::= cycle_condition_start cycle_expression TKN_RPAREN body cycle_end.
  55: call ::=.
  56: call ::= call_expression call_prm.
  57: call_prm ::= TKN_COMMA call.
  58: call_prm ::=.
  59: print ::= TKN_PRINT TKN_LPAREN print_prm TKN_RPAREN TKN_SEMI_COLON. [TKN_PRINT precedence=1]
  60: print_prm ::= string_to_print print_prm_prm.
  61: print_prm ::= expression_to_print print_prm_prm.
  62: print_prm_prm ::= TKN_COMMA print_prm.
  63: print_prm_prm ::=.
  64: exp ::= termino.
  65: exp ::= exp_begin exp.
  66: termino ::= termino_begin termino.
  67: factor ::= TKN_LPAREN expression TKN_RPAREN.
  68: factor ::= sign factor_prm.
  69: factor ::= factor_prm.
  70: factor_prm ::= cte_int.
  71: factor_prm ::= cte_float.
  72: oper ::= TKN_MULT.
  73: oper ::= TKN_DIV.
  74: sign ::= TKN_PLUS.
  75: sign ::= TKN_MINUS.
